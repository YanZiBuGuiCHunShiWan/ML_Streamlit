import streamlit as st
import json
import requests
import pandas as pd
info=[["https://github.com/chatopera/efaqa-corpus-zh","心理咨询领域首个开放的 QA 语料库，包括 20,000 条心理咨询数据，也是公开的最大的中文心理咨询对话语料。数据集内容丰富，不但具备多轮对话内容，也有分类等信息，制作过程耗费大量时间和精力，比如标注过程是面向多轮对话，平均每条标记耗时 1 分钟。数据集由斯坦福大学，UCLA 和台湾辅仁大学临床心理学等心理学专业人士参与建设，并由 Chatopera 和诸多志愿者合作完成。","笔者下载数据集以后发现里面的语料大多来自于聊天场景，比较口语化，且不是明确的多轮对话，难以利用。"],
      ["https://github.com/thu-coai/PsyQA","一个中文心理健康支持问答数据集，提供了丰富的援助策略标注。可用于生成富有援助策略的长咨询文本","对话质量还可以，但部分语料聊天场景任然不够正式，而且都是以单轮对话的形式呈现，存在一定局限性。"],
      ["https://github.com/HIT-SCIR-SC/QiaoBan","主要面向K12中小学生及家长群体","虽然是多轮对话数据，但主要偏向于幼龄儿童，而且回复比较简短，感觉没提供啥有用的信息。"],
      ["https://qiuhuachuan.github.io/smile/","数据集通过 ChatGPT 改写真实的心理互助 QA 为多轮的心理健康支持多轮对话（single-turn to multi-turn inclusive language expansion via ChatGPT），该数据集SmileChat含有 55,165k 个多轮对话，其对话主题、词汇和篇章语义更加丰富多样，更加符合在长程多轮对话的应用场景。","多轮对话的形式，但是质量不太好，回答都很泛，用于微调后的模型回答都很简短，没蕴含啥关键信息。想让GPT一次性生成高质量多轮对话还是挺难的。"]]
df=pd.DataFrame(info,columns=["地址","简介","实际情况"])
def Custom_Datasets():
    st.markdown("## :blue[一种基于马尔科夫链和大语言模型交互的多轮对话生成方法]")
    st.markdown("&emsp;&emsp;相信大家都体验过了大语言模型强大的上下文理解能力，尽管模型可以处理复杂的对话，但它可能无法完全理解复杂的人类情感、幽默或细微的暗示。\
        特别是在心理健康领域，受限于专业数据集的数量，大语言模型在该领域表现有显著提升的空间，如果让模型自由回答心理领域问题，往往很难提供针对性的建议，回复的内容也缺乏条理。那么给模型一定的约束，能否较好地引导模型\
            往正确的方向走，显著提升在垂直领域的回复质量呢？受鉴于[PsyQA](https://arxiv.org/abs/2106.01702)，我们尝试编写合适的带有策略的prompt引导ChatGPT生成高质量多轮对话，从而\
                训练一个心理学垂直领域会CBT疗法的智能助手。")
    st.markdown("&emsp;&emsp;在开始之前，笔者先罗列出现有的中文的   心理领域的开源语料的来源，以及简要介绍一下其特性。")
    st.dataframe(df)
    st.markdown("&emsp;&emsp;此外，还有一些没有公开数据集的相关项目，如[MindChat](https://github.com/X-D-Lab/MindChat),[EduChat](https://github.com/ECNU-ICALK/EduChat)以及[SoulChat](https://github.com/scutcyr/SoulChat)笔者实际体验后觉得效果都一般，包装得倒是挺不错。")
    st.markdown("#### :blue[1.策略标注语料]")
    st.markdown("&emsp;&emsp;和普通的对话标注语料不同，策略标注语料有其独有的策略标签，如下是一个直观的例子：")
    content_code='''
    #################################这是普通的语料################################################
    question: 我经常失眠早醒手抖发呆，上一秒记得下一秒根本不记得 
    answer: 我很抱歉听到您正在经历这些问题。失眠、早醒、手抖和注意力集中困难可能是多种潜在问题的症状，包括焦虑、抑郁、压力、睡眠障碍等。建议您采取以下步骤来改善您的情况：
    1.寻求医疗帮助：首先，您应该咨询医生或精神健康专家，以进行全面的身体和心理评估。他们可以帮助确定您的症状的原因，并提供相应的治疗建议。
    2.睡眠管理：维持健康的睡眠习惯对于改善失眠非常重要。尽量保持规律的睡眠时间表，避免在睡前摄入咖啡因和大量的食物，创建一个舒适的睡眠环境，避免在床上使用电子设备。
    3.放松技巧：学习放松技巧如深呼吸、冥想、渐进性肌肉松弛等，可以帮助您减轻焦虑和压力，有助于更好地入睡。
    再次强调，最好的做法是咨询专业医生或心理健康专家，以获取针对您具体情况的建议和治疗。他们可以根据您的症状和需要为您制定个性化的治疗计划。
    

    #################################这是有策略标注的语料################################################
    question: 我经常失眠早醒手抖发呆，上一秒记得下一秒根本不记得 
    answer: （重述）你最近经常失眠，早上醒来后手抖、发呆，而且有时候会出现上一秒记得的事情在下一秒就忘记了的情况。
    （解释）这些症状可能与你的睡眠质量有关。失眠和早醒可能导致你的大脑没有得到充分的休息，从而影响你的注意力和记忆力。手抖可能是由于紧张、焦虑或疲劳引起的。发呆可能是大脑在试图处理过多的信息时的一种自然反应。
    （正面建议）首先，建议你尝试改善睡眠环境，保持房间安静、舒适，避免在床上使用电子设备。其次，可以尝试进行一些放松的活动，如深呼吸、瑜伽或冥想，以帮助缓解紧张和焦虑。此外，保持良好的作息规律，每天进行适量的运动，以及保持健康的饮食习惯，都有助于改善你的睡眠质量。
    （封闭式提问）你是否已经尝试过以上提到的方法来改善你的睡眠状况？
    '''
    st.code(content_code,language="shell")
    st.markdown("&emsp;&emsp;可以看到，策略标注语料在回复上，每一句都会标上一个对应的策略。策略的种类有很多，并不局限于上述例子中的几个策略。:red[策略的作用：]用于限制模型自由发挥，\
        即使模型自由回复的效果还不错，但是和真实场景下的心理咨询师疏导对话风格不同，针对性也不同。因此，通过指定合适的策略，尝试引导模型按照给定的策略顺序进行回复，相当于让模型模仿专业的心理咨询师进行心理疏导。")
    st.markdown("&emsp;&emsp;出发点：:red[我们希望利用带有策略标注的语料训练出一个垂直领域的大模型，但是高质量的策略标注语料是难以收集的，有没有什么办法能基于现有的标注语料生成更丰富的语料呢？]")
    st.markdown("&emsp;&emsp;一方面，我们希望能利用现有语料生成带有策略标注的多轮对话数据集，另一方面，我们还希望这些策略标注尽可能的准确。万幸的是，ChatGPT有足够强大的语言理解能力，我们可以编写合适的prompt引导\
        ChatGPT生成高质量多轮对话数据用于训练。现在的核心问题就变成:red[1.如何让ChatGPT回复的结果带有策略标签。2.策略标签怎样才能比较合理。]")
    st.markdown("&emsp;&emsp;针对第一个问题，这取决于如何编写一个能让ChatGPT理解的prompt，可以在回复语料上标注出相应的策略，而如何找到一个合适的prompt\
        还是要靠一点一点的尝试:red[(对，就是慢慢试，直到ChatGPT的回复遵循你指定的规则来，因此过程比较耗时。)]经过笔者的不断尝试，最终的prompt形式如下：")
    prompt_code='''
    我想让你扮演一个聪明的富有感情的心理健康智能助手，能为用户解答各种问题。你应该用中文回复用户，并遵循以下要求：
    1.用户会在问题结束时指定你回复策略，比如xxxxxxxxxxxxxxxxxxxxxxxxxxx。
    2.回复用户时，你应该严格遵守给定的回复策略，并按照顺序回复。
    3.你应该在回复每一句话的开头标明策略，比如“xxxxxxxxxxxxxxxxxxxxxxxxxxx”。
    4.你的回复应当xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    5.不要问用户xxxxxxxxxxxxxxxx
    6.如果用户xxxxxxxx
    用户：{question}({strategies})
    '''
    st.code(prompt_code,language="shell")
    st.markdown("&emsp;&emsp;其中，$\{question\}$和$\{strategies \}$分别要填入问题，以及相应的策略。问题比较好获取，那么策略怎么生成呢？生成策略有什么依据么？")
    st.markdown("##### :blue[1.1马氏链]")
    st.markdown("&emsp;&emsp;在策略标注语料中，可以认为策略会进行转移，以第一个策略标注语料的代码块为例，比如当前回复的第一个策略是:red['重述']，那么第二个策略是:red['解释']，\
        第三个策略是:red['正面建议']，第四个策略是:red['封闭式提问']。那么我们可以认为，策略在不同时刻发生了转移，比如从第0个时刻的:red['重述']在第一个时刻转移成了:red['解释']，再转移到第二个时刻的:red['正面建议']，以此类推。")
    st.markdown("&emsp;&emsp;基于此，我们可以自然地想到一种数学模型$\\to$:red[马氏链]，它用于描述随机过程种状态的转移概率，且是基于马尔可夫性质的概率模型，即一个系统的未来状态只依赖于其当前状态，而不依赖于其过去的状态。这种性质通常被称为“无记忆性”。\
        我们可以将策略标注语料中的每一个策略都视作一个状态，策略的转移就对应了状态的转移。这些状态之间的转移概率通常以矩阵形式表示，称为转移矩阵。")
    st.markdown("&emsp;&emsp;要确定一个马氏链，那么需要定义其状态空间，确定状态转移的概率、初始状态分布。显然，状态空间其实就是策略集合，每一个状态代表了一个具体的策略，而状态转移矩阵用于描述当前时刻状态$i$到下一个时刻是状态$j$的概率，\
        初始状态分布就是在第0个时刻状态的概率分布是啥样的。如下图所示：")
    st.image("src/markov_chain.jpg")
    st.markdown("&emsp;&emsp;初始化状态分布记作$P$，假设状态集合大小为$k$，那么必有$\displaystyle\sum_{i=1}^k P_i= 1$。若状态转移矩阵记作$M$，其中的元素记作$M_{ij}$，其中\
        $M_{ij}=P(s_t=i|s_{t+1}=j)$，则有$\displaystyle\sum_{j=1}^k M_{ij}=1$，即状态转移矩阵的每一行之和都为1，因为每一行都是一个概率分布。而有了马氏链，我们就可以进行$m$次马氏链的一步转移，生成$m$个策略。如下是\
            利用马氏链生成策略的基本步骤。")
    markov_code='''
    step1. 基于初始化分布P采样，得到一个初始策略，假设是“共情”。
    step2. 基于状态转移矩阵M，进行策略跳转，假设从策略“共情”跳转到了策略“认知重评”。
    step3. 基于状态转移矩阵M，进行策略跳转，假设从策略“认知重评”跳转到了策略“提供建议”。。
    .......
    stepm. 基于状态转移矩阵M，进行策略跳转，假设从策略“封闭式提问”跳转到了策略“开放式提问”。'''
    st.code(markov_code,language="shell")
    st.markdown("&emsp;&emsp;基于马氏链生成的策略较为可靠，因为构造马氏链是基于已标注语料统计后得到的，如果标注语料的策略比较符合某种分布规律，那么相当于马氏链模拟了这种规律，因此生成的策略是较为可靠的。\
        当然，缺陷也很明显，1.如果你的语料不够充分，那么马氏链的统计量就不够具有代表性；2.标注语料的策略不成体系，如果是乱来的，那么基于标注语料构建的马氏链生成的策略也不会符合实际情况，比如生成这样的一组策略：'共情->共情->共情->共情'。")
    st.markdown("&emsp;&emsp;笔者已经利用有标注语料，构建了一个马氏链，可以生成策略供大家参考，大家请结合实际情况采纳这组策略!直接点击下方按钮即可。")
    if st.button("生成一组策略",type="primary"):
        #result = requests.post("http://127.0.0.1:5000/post")
        #strategies=result.text
        st.write("抱歉，服务已经暂停噢~")
        
    st.markdown("##### :blue[1.2双模型交互]")
    st.markdown("&emsp;&emsp;先前的prompt只适用于对话的首轮，用于告诉大语言模型该遵循哪些规则。当用户发起提问Q1后模型就会生成回复A1，至此便得到了一个单轮对话。\
        那如果我们想要多轮的对话需要继续编写用户问题吗？第二轮对话的prompt要该怎么写呢？")
    st.markdown("&emsp;&emsp;对于第一个问题，回答是“是的”。我们一次性只生成一轮对话，因为让GPT一次性生成过多的内容难以把控质量，一旦某一个环节出错便会影响到后继效果。因此我们需要继续向GPT提问以及提供策略，\
        不过提问的环节可以让另一个ChatGPT2来扮演，将之前的对话历史传递给ChatGPT2并编写合适的prompt便可以解决问题。关于第二个问题，其实很简单，我们只需要输入“用户：xxxxx（策略1->策略2->...策略K）即可。”")
    st.markdown("&emsp;&emsp;让另一个ChatGPT2模拟用户进行提问同样需要一个prompt，笔者采用的prompt如下：")
    prompt_code2='''我想让你扮演一个聪明的富有感情的对话预测智能助手，给定青少年和智能助手的对话内容，你来预测青少年下一个问题或者想法，不需要预测智能助手的对话。
青少年：{question} 智能助手：{answer}
你的预测->青少年：'''
    st.code(prompt_code2,language="shell")
    st.markdown("&emsp;&emsp;整个流程大致如下图所示：")
    st.image("src/Datasets/DA-process.png",caption="Fig.2:数据生成流程")
    st.markdown("&emsp;&emsp;通过这种方式生成的语料内容丰富，且策略较对应的内容质量也比较高。当然也存在一些不足，如比较耗时，有可能模型模拟用户提问的环节提出的问题不够合理等等。")
    st.markdown("### :blue[2.One  Shot Learning]")
    st.markdown("&emsp;&emsp;上述多轮对话生成方式较为繁琐，那有没有什么简便一点的方法也能帮我生成多轮对话呢？在接收一定质量下降的前提下可以显著提升数据生成的速度。\
        答案是：:blue[One-Shot]! ChatGPT这种专家级大规模语言模型结合几个案例就能解决大多数的问题。经过笔者尝试以后，最终决定的prompt形式如下：")
    oneshot_code='''    
            我想让你扮演一个认知行为治疗流派的心理咨询师，在为用户解答各种问题时采认知行为治疗流派的策略和方法。
        以下对话发生在认知行为疗法的心理咨询师和来访者之间，一个成功的对话案例如下：<<< {example} >>> 。
        请你参考认知行为疗法的心理咨询师和来访者的对话案例，扮演心理咨询师为来访者提供合适的心理疏导和回复，并遵循以下要求：
        1.回复来访者时，心理咨询师的回复策略可以选择的策略集合如下:{策略1，策略2，...，策略k}，但以xxx、xxxx为主，至少要使用一次xxx和xxx策略。
        2.回答中用【 】标记回复策略，并按照顺序回复
        3.心理咨询师回复的需要标明策略，比如“【策略】回复。【策略】回复……【策略】回复”。
        4.心理咨询师的回复应当符合认知行为疗法的原则和策略，具有情感支持和疏导人的作用，并且回复内容简练，能提供有帮助的信息。
        5.生成4至5轮的多轮对话。
        来访者：{question}'''
    st.code(oneshot_code,language="shell")
    st.markdown("&emsp;&emsp;一个生成案例如下图3所示：")
    st.image("src/Datasets/DA-process2.png",caption="Fig.2:生成案例")
    st.markdown("&emsp;&emsp;至此，笔者已经介绍完了目前探索过的数据生成方法。在心理学领域，构造多轮对话的内容并不是越多越好，这取决于你的目标（应用场景）！\
        过于简化会显得内容空洞乏味，只给用户提供共情价值是远远不够的。而过于专业化，回复内容一长串也不可取，太多的内容会导致用户失去耐心。同时，回复的策略也是值得研究的，我们\
            要考虑到数据的共情性、专业性、多样性、简练程度等因素，达到一种微妙的平衡。这是一个漫长的值得探索的过程~")
    
    
    